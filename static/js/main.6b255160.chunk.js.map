{"version":3,"sources":["constants/index.ts","reducers/optionsReducer.ts","reducers/toDoListReducer.ts","reducers/index.ts","components/Footer.tsx","components/Header/Header.tsx","actions/index.ts","components/Header/index.ts","constants/menu.ts","components/SideDrawer/ListItemLink.tsx","components/SideDrawer/SideDrawer.tsx","components/SideDrawer/index.ts","components/Calendar/Calendar.tsx","components/Calendar/index.ts","components/CalendarList/CalendarListItem.tsx","components/CalendarList/CalendarList.tsx","components/CalendarList/index.ts","views/CalendarView.tsx","utils/index.ts","components/AddItemForm/AddItemForm.tsx","components/AddItemForm/index.ts","components/FilterMenu/FilterMenuItem.tsx","components/FilterMenu/FilterMenu.tsx","components/FilterMenu/index.ts","components/Task/Task.tsx","components/Task/index.ts","components/TaskList/TaskList.tsx","components/TaskList/index.ts","views/HomeView.tsx","App.tsx","index.tsx"],"names":["ACTION_CONSTANTS","INIT_TASK_LIST","ADD_NEW_TASK","UPDATE_TASK","TOGGLE_TASK_STATUS","REMOVE_TASK","LOAD_STORE","APPLY_FILTER","TOGGLE_DRAWER","UPDATE_TASK_DATE","defaultStore","filterType","isDrawerOpen","defaultToDo","reducers","combineReducers","toDoList","state","action","type","C","newId","uuid","id","value","payload","taskName","isCompleted","hasDueDate","dueDate","toISOString","dateAdded","Date","newValue","newDate","options","store","createStore","withStyles","theme","createStyles","footer","position","background","bottom","textAlign","width","paddingBottom","spacing","classes","className","Typography","variant","href","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginLeft","marginRight","withTheme","toggleDrawer","AppBar","Toolbar","IconButton","color","aria-label","onClick","HeaderContainer","connect","dispatch","Header","MAIN_MENU","name","icon","Home","link","CalendarToday","FILTER_MENU","label","ListItemLink","props","to","ListItem","button","component","Link","ListItemIcon","ListItemText","primary","flexShrink","whiteSpace","drawerOpen","enteringScreen","drawerClose","overflowX","breakpoints","up","toolbar","display","alignItems","justifyContent","padding","mixins","Drawer","classNames","paper","open","Divider","List","map","menuItem","key","SideDrawerContainer","SideDrawer","ToDoCalendar","eventsList","selectedDate","calendarComponentRef","React","createRef","useEffect","current","getApi","gotoDate","height","ref","defaultView","plugins","dayGridPlugin","events","themeSystem","list","Object","keys","forEach","push","title","start","Calendar","CalendarListItem","date","secondary","CalendarList","tasksList","length","task","moment","format","CalendarView","this","Paper","root","Grid","container","item","md","calendar","match","params","toDate","Component","flex","minHeight","margin","formatDate","getFullYear","getMonth","toString","padStart","getDate","defualtState","newItemText","AddItemForm","checkForm","undefined","handleSubmit","addTaskItem","setState","handleTextUpdate","event","target","handleKeyPress","toggleDate","checked","handleDateChange","xs","TextField","onChange","onKeyPress","centerItem","FormControlLabel","control","Checkbox","labelPlacement","disabled","defaultValue","InputLabelProps","shrink","Button","endIcon","AddItemContainer","FilterMenuItem","handleClick","MenuItem","FilterMenu","handleItemClick","handleMenuClose","applyFilter","handleOpenMenu","persist","anchorEl","currentTarget","showFilterMenu","aria-owns","aria-haspopup","onClose","transformOrigin","vertical","horizontal","FilterControlContainer","TaskItem","onTextUpdate","newItem","toggleStatus","toggleTask","updateTask","isEditing","removeTask","toggleEdit","renderForm","TableRow","TableCell","colSpan","style","onKeyDown","sm","renderItem","itemClass","TaskContainer","itemId","newText","Task","ToDoList","Table","TableHead","align","TableBody","index","TaskListContainer","filter","initTaskList","TaskList","HomeView","handelAddButton","prevState","showAddNewItem","isFormVisible","filler","rightIcon","formVisible","Collapse","in","collapse","transform","content","flexGrow","flexFlow","loadReduxStore","useState","setOpen","persistedState","localStorage","getItem","JSON","parse","CssBaseline","exact","path","Snackbar","anchorOrigin","reason","autoHideDuration","message","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b255160.chunk.js","sourcesContent":["const ACTION_CONSTANTS = {\r\n  INIT_TASK_LIST: \"INIT_TASK_LIST\",\r\n  ADD_NEW_TASK: \"ADD_NEW_ITEM\",\r\n  UPDATE_TASK: \"UPDATE_ADD_ITEM\",\r\n  TOGGLE_TASK_STATUS: \"TOGGLE_ITEM\",\r\n  REMOVE_TASK: \"REMOVE_ITEM\",\r\n  LOAD_STORE: \"LOAD_STORE\",\r\n  APPLY_FILTER: \"APPLY_FILTER\",\r\n  TOGGLE_DRAWER: \"TOGGLE_DRAWER\",\r\n  UPDATE_TASK_DATE: \"UPDATE_TASK_DATE\"\r\n};\r\n\r\nexport default ACTION_CONSTANTS;\r\n\r\nexport const STYLE_CONSTANTS = {\r\n  drawerWidth: 240\r\n};\r\n","import C from \"../constants\";\r\nimport { IAction, IOptions } from \"../model/store\";\r\n\r\nexport const defaultStore: IOptions = {\r\n  filterType: \"all\",\r\n  isDrawerOpen: false\r\n};\r\n\r\nexport default function options(\r\n  state: IOptions = defaultStore,\r\n  action: IAction\r\n): IOptions {\r\n  switch (action.type) {\r\n    case C.APPLY_FILTER: {\r\n      return {\r\n        ...state,\r\n        filterType: action.payload\r\n      };\r\n    }\r\n    case C.TOGGLE_DRAWER: {\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: !state.isDrawerOpen\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n}\r\n","import uuid from \"uuid\";\r\nimport C from \"../constants\";\r\nimport { IAction, ITodoList } from \"../model/store\";\r\n\r\nexport const defaultToDo: ITodoList = {};\r\n\r\nexport default function toDoList(\r\n  state: ITodoList = defaultToDo,\r\n  action: IAction\r\n): ITodoList {\r\n  switch (action.type) {\r\n    case C.ADD_NEW_TASK: {\r\n      const newId = uuid();\r\n      return {\r\n        ...state,\r\n        [newId]: {\r\n          id: newId,\r\n          value: action.payload.taskName,\r\n          isCompleted: false,\r\n          hasDueDate: action.payload.hasDueDate,\r\n          dueDate: action.payload.dueDate.toISOString(),\r\n          dateAdded: new Date().toISOString()\r\n        }\r\n      };\r\n    }\r\n    case C.REMOVE_TASK: {\r\n      if (state[action.payload]) {\r\n        delete state[action.payload];\r\n      }\r\n\r\n      return { ...state };\r\n    }\r\n    case C.TOGGLE_TASK_STATUS: {\r\n      state[action.payload].isCompleted = !state[action.payload].isCompleted;\r\n\r\n      return { ...state };\r\n    }\r\n    case C.UPDATE_TASK: {\r\n      const { id, newValue, hasDueDate, newDate } = action.payload;\r\n      state[id].value = newValue;\r\n      state[id].hasDueDate = hasDueDate;\r\n\r\n      if (hasDueDate) {\r\n        state[id].dueDate = newDate;\r\n      }\r\n\r\n      return { ...state };\r\n    }\r\n    case C.LOAD_STORE: {\r\n      if (action.payload.toDoList) {\r\n        return { ...action.payload.toDoList };\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n    case C.INIT_TASK_LIST: {\r\n      return { ...state };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n}\r\n","import logger from \"redux-logger\";\r\n\r\nimport options from \"./optionsReducer\";\r\nimport toDoList from \"./toDoListReducer\";\r\n\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\n\r\nlet middleware = {};\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  middleware = applyMiddleware(logger);\r\n}\r\n\r\nconst reducers = combineReducers({ toDoList, options });\r\n\r\nexport const store = createStore(reducers, middleware);\r\n","import React from \"react\";\r\n\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { IStyles } from \"../model\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    footer: {\r\n      position: \"fixed\",\r\n      background: \"white\",\r\n      bottom: 0,\r\n      textAlign: \"center\",\r\n      width: \"100%\",\r\n      paddingBottom: theme.spacing(1) * 2\r\n    }\r\n  });\r\n\r\nconst Footer: React.FC<IStyles> = ({ classes }) => {\r\n  return (\r\n    <div className={classes.footer}>\r\n      <Typography variant=\"body1\">\r\n        Built with <a href=\"https://reactjs.org/\">React</a> by{\" \"}\r\n        <a href=\"https://www.kazyamada.com\">Kazuki Yamada</a>.{\" \"}\r\n        <a href=\"https://github.com/kaz-yamada/React-Redux-Todo-List\">Source</a>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { IHeaderContainerProps } from \".\";\r\nimport { IStyles } from \"../../model\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      marginLeft: 12,\r\n      marginRight: 36\r\n    }\r\n  });\r\n\r\ninterface IProps extends IHeaderContainerProps, IStyles {}\r\n\r\nconst Header: React.FC<IProps> = ({ classes, toggleDrawer }) => {\r\n  const handleDrawerToggle = () => {\r\n    toggleDrawer();\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"Open drawer\"\r\n          onClick={handleDrawerToggle}\r\n          className={classes.menuButton}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" color=\"inherit\">\r\n          To Do List\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default withStyles(styles, { withTheme: true })(Header);\r\n","import { IAction, IReduxStore } from \"../model/store\";\r\n\r\nimport C from \"../constants\";\r\n\r\nexport const initTaskList = () => {\r\n  return {\r\n    type: C.INIT_TASK_LIST,\r\n    payload: \"\"\r\n  };\r\n};\r\n\r\nexport const addTaskItem = (\r\n  task: string,\r\n  hasTaskDate: boolean,\r\n  taskDate: Date\r\n): IAction => {\r\n  return {\r\n    type: C.ADD_NEW_TASK,\r\n    payload: {\r\n      taskName: task,\r\n      hasDueDate: hasTaskDate,\r\n      dueDate: taskDate\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleTask = (id: string): IAction => {\r\n  return {\r\n    type: C.TOGGLE_TASK_STATUS,\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const removeTask = (id: string): IAction => {\r\n  return {\r\n    type: C.REMOVE_TASK,\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const updateDueDate = (itemId: string, newDate: Date): IAction => {\r\n  return {\r\n    type: C.UPDATE_TASK_DATE,\r\n    payload: { id: itemId, newValue: newDate }\r\n  };\r\n};\r\n\r\nexport const updateTask = (\r\n  itemId: string,\r\n  newText: string,\r\n  hasDueDate: boolean,\r\n  newDate?: Date\r\n): IAction => {\r\n  return {\r\n    type: C.UPDATE_TASK,\r\n    payload: { id: itemId, newValue: newText, hasDueDate, newDate }\r\n  };\r\n};\r\n\r\nexport const loadStore = (list: IReduxStore) => {\r\n  return {\r\n    type: C.LOAD_STORE,\r\n    payload: list\r\n  };\r\n};\r\n\r\nexport const applyFilter = (filterName: string): IAction => {\r\n  return {\r\n    type: C.APPLY_FILTER,\r\n    payload: filterName\r\n  };\r\n};\r\n\r\nexport const toggleDrawer = (): IAction => {\r\n  return {\r\n    type: C.TOGGLE_DRAWER,\r\n    payload: null\r\n  };\r\n};\r\n","import Header from \"./Header\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { toggleDrawer } from \"../../actions\";\r\nimport { IReduxStore } from \"../../model/store\";\r\n\r\ninterface IStoreProps {\r\n  isDrawerOpen: boolean;\r\n}\r\n\r\ninterface IHeaderDispatch {\r\n  toggleDrawer: () => void;\r\n}\r\n\r\nexport interface IHeaderContainerProps extends IStoreProps, IHeaderDispatch {}\r\n\r\nconst mapStoreToProps = (store: IReduxStore): IStoreProps => {\r\n  return {\r\n    isDrawerOpen: store.options.isDrawerOpen\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IHeaderDispatch => ({\r\n  toggleDrawer: () => dispatch(toggleDrawer())\r\n});\r\n\r\nconst HeaderContainer = connect(\r\n  mapStoreToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n\r\nexport default HeaderContainer;\r\n","// import { CalendarToday, Home } from \"@material-ui/icons\";\r\nimport CalendarToday from \"@material-ui/icons/CalendarToday\";\r\nimport Home from \"@material-ui/icons/Home\";\r\n\r\nimport { IMainMenuItem, IMenuItem } from \"../model\";\r\n\r\nconst MAIN_MENU: IMainMenuItem[] = [\r\n  { name: \"Home\", icon: Home, link: \"/\" },\r\n  { name: \"Calendar\", icon: CalendarToday, link: \"/calendar\" }\r\n];\r\nexport default MAIN_MENU;\r\n\r\nexport const FILTER_MENU: IMenuItem[] = [\r\n  {\r\n    label: \"All\",\r\n    value: \"all\"\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    value: \"active\"\r\n  },\r\n  {\r\n    label: \"Completed\",\r\n    value: \"completed\"\r\n  }\r\n];\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\ninterface IProps {\r\n  name: string;\r\n  icon: React.ReactElement;\r\n  to: string;\r\n  replace?: boolean;\r\n}\r\n\r\nfunction ListItemLink(props: IProps) {\r\n  const { icon, name, to } = props;\r\n  return (\r\n    <ListItem button={true} component={Link} to={to}>\r\n      <ListItemIcon>{icon}</ListItemIcon>\r\n      <ListItemText primary={name} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default ListItemLink;\r\n","import React from \"react\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { ISideDrawerContainerProps } from \".\";\r\nimport { STYLE_CONSTANTS } from \"../../constants\";\r\n\r\nimport MAIN_MENU from \"../../constants/menu\";\r\nimport ListItemLink from \"./ListItemLink\";\r\n\r\nconst drawerWidth = STYLE_CONSTANTS.drawerWidth;\r\n\r\ninterface IProps {\r\n  classes: any;\r\n  theme: Theme;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\"\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: 0,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(1) * 7 + 1\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar\r\n    }\r\n  });\r\n\r\nconst SideDrawer: React.FC<ISideDrawerContainerProps & IProps> = ({\r\n  classes,\r\n  isDrawerOpen\r\n}) => {\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isDrawerOpen,\r\n        [classes.drawerClose]: !isDrawerOpen\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isDrawerOpen,\r\n          [classes.drawerClose]: !isDrawerOpen\r\n        })\r\n      }}\r\n      open={isDrawerOpen}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List>\r\n        {MAIN_MENU.map(menuItem => (\r\n          <ListItemLink\r\n            key={menuItem.name}\r\n            name={menuItem.name}\r\n            icon={<menuItem.icon />}\r\n            to={menuItem.link}\r\n          />\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SideDrawer);\r\n","import SideDrawer from \"./SideDrawer\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { toggleDrawer } from \"../../actions\";\r\nimport { IReduxStore } from \"../../model/store\";\r\n\r\ninterface IDispatchProps {\r\n  toggleDrawer: () => void;\r\n}\r\n\r\ninterface IStoreProps {\r\n  isDrawerOpen: boolean;\r\n}\r\n\r\nexport interface ISideDrawerContainerProps\r\n  extends IStoreProps,\r\n    IDispatchProps {}\r\n\r\nconst mapStoreToProps = (store: IReduxStore) => {\r\n  return {\r\n    isDrawerOpen: store.options.isDrawerOpen\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps => ({\r\n  toggleDrawer: () => dispatch(toggleDrawer())\r\n});\r\n\r\nconst SideDrawerContainer = connect(\r\n  mapStoreToProps,\r\n  mapDispatchToProps\r\n)(SideDrawer);\r\n\r\nexport default SideDrawerContainer;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\n\r\nimport { ICalendarContainerProps } from \".\";\r\n\r\ninterface ICalendarProps {\r\n  selectedDate: Date;\r\n}\r\n\r\ninterface IProps extends ICalendarProps, ICalendarContainerProps {}\r\n\r\nconst ToDoCalendar: React.FC<IProps> = ({ eventsList, selectedDate }) => {\r\n  const calendarComponentRef: React.RefObject<FullCalendar> = React.createRef();\r\n\r\n  useEffect(() => {\r\n    if (calendarComponentRef.current !== null) {\r\n      const calendarApi = calendarComponentRef.current.getApi();\r\n      // call a method on the Calendar object\r\n      calendarApi.gotoDate(selectedDate);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <FullCalendar\r\n      height={\"parent\"}\r\n      ref={calendarComponentRef}\r\n      defaultView=\"dayGridMonth\"\r\n      plugins={[dayGridPlugin]}\r\n      events={eventsList}\r\n      themeSystem=\"standard\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ToDoCalendar;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { EventInput } from \"@fullcalendar/core\";\r\n\r\nimport Calendar from \"./Calendar\";\r\n\r\nimport { IReduxStore } from \"../../model/store\";\r\n\r\nexport interface ICalendarContainerProps {\r\n  eventsList: EventInput[];\r\n}\r\n\r\nconst mapStateToProps = (store: IReduxStore): ICalendarContainerProps => {\r\n  const list: EventInput[] = [];\r\n  Object.keys(store.toDoList).forEach(key => {\r\n    const { id, value } = store.toDoList[key];\r\n    if (store.toDoList[key].hasDueDate) {\r\n      const { dueDate } = store.toDoList[key];\r\n\r\n      list.push({\r\n        id,\r\n        title: value,\r\n        start: dueDate\r\n      });\r\n    }\r\n  });\r\n\r\n  return {\r\n    eventsList: list\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Calendar);\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\ninterface IProps {\r\n  id: string;\r\n  date: string;\r\n  title: string;\r\n}\r\n\r\nconst CalendarListItem: React.FC<IProps> = ({ date, title }) => {\r\n  return (\r\n    <ListItem button={true} component={Link} to={`/calendar/${date}`}>\r\n      <ListItemText primary={title} secondary={date} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default CalendarListItem;\r\n","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\n\r\nimport { ICalendarProps } from \".\";\r\nimport CalendarListItem from \"./CalendarListItem\";\r\n\r\nconst CalendarList: React.FC<ICalendarProps> = ({\r\n  tasksList\r\n}) => {\r\n  return (\r\n    <List>\r\n      {tasksList.length === 0 ? (\r\n        <div>No tasks with dates found</div>\r\n      ) : (\r\n        tasksList.map(task => (\r\n          <CalendarListItem\r\n            key={task.id}\r\n            id={task.id}\r\n            title={task.value}\r\n            date={moment(task.dueDate).format(\"DD-MMM-YYYY\")}\r\n          />\r\n        ))\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default CalendarList;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport CalendarList from \"./CalendarList\";\r\n\r\n// import { Event } from \"react-big-calendar\";\r\nimport { IReduxStore, IToDoItem } from \"../../model/store\";\r\n\r\nexport interface ICalendarProps {\r\n  tasksList: IToDoItem[];\r\n}\r\n\r\nconst mapStateToProps = (store: IReduxStore): ICalendarProps => {\r\n  const list: IToDoItem[] = [];\r\n  Object.keys(store.toDoList).forEach(key => {\r\n    if (store.toDoList[key].hasDueDate) {\r\n      list.push(store.toDoList[key]);\r\n    }\r\n  });\r\n\r\n  return {\r\n    tasksList: list\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CalendarList);\r\n","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport CalendarContainer from \"../components/Calendar\";\r\nimport CalenarListContainer from \"../components/CalendarList\";\r\n\r\ninterface IState {\r\n  selectedDate: Date;\r\n}\r\n\r\ninterface IMatchParams {\r\n  date: string;\r\n}\r\n\r\ninterface IProps\r\n  extends RouteComponentProps<IMatchParams>,\r\n    WithStyles<typeof styles> {}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flex: 1,\r\n      minHeight: 600\r\n    },\r\n    container: { height: \"100%\" },\r\n    calendar: {\r\n      margin: theme.spacing(1) * 2\r\n    }\r\n  });\r\n\r\nclass CalendarView extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedDate: new Date()\r\n    };\r\n  }\r\n\r\n  public static getDerivedStateFromProps(props: IProps, state: IState): IState {\r\n    const date = props.match.params.date\r\n      ? moment(props.match.params.date, \"DD-MMM-YYYY\").toDate()\r\n      : state.selectedDate;\r\n\r\n    return {\r\n      selectedDate: date\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Grid container={true} className={classes.container}>\r\n          <Grid item={true} md={true} className={classes.calendar}>\r\n            <CalendarContainer selectedDate={this.state.selectedDate} />\r\n          </Grid>\r\n          <Grid item={true} md={4}>\r\n            <CalenarListContainer />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(CalendarView);\r\n","export const formatDate = (date: Date | undefined) => {\r\n  if (date) {\r\n    return `${date.getFullYear()}-${date\r\n      .getMonth()\r\n      .toString()\r\n      .padStart(2, \"0\")}-${date.getDate()}`;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nimport { IAddItemContainerProps } from \".\";\r\nimport { IStyles } from \"../../model\";\r\nimport { formatDate } from \"../../utils\";\r\n\r\ninterface IState {\r\n  newItemText: string;\r\n  hasDueDate: boolean;\r\n  dueDate: Date;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      padding: `${theme.spacing(1)}px ${theme.spacing(1) * 3}px`\r\n    }\r\n  });\r\n\r\nconst defualtState: IState = {\r\n  newItemText: \"\",\r\n  hasDueDate: false,\r\n  dueDate: new Date()\r\n};\r\n\r\nclass AddItemForm extends React.Component<\r\n  IAddItemContainerProps & IStyles,\r\n  IState\r\n> {\r\n  constructor(props: IAddItemContainerProps & IStyles) {\r\n    super(props);\r\n\r\n    this.state = { ...defualtState };\r\n  }\r\n\r\n  private checkForm = () => {\r\n    if (!this.state.newItemText) {\r\n      return false;\r\n    }\r\n    if (this.state.hasDueDate && this.state.dueDate === undefined) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  private handleSubmit = () => {\r\n    if (this.checkForm()) {\r\n      this.props.addTaskItem(\r\n        this.state.newItemText,\r\n        this.state.hasDueDate,\r\n        this.state.dueDate\r\n      );\r\n\r\n      this.setState({ ...defualtState });\r\n    }\r\n  };\r\n\r\n  private handleTextUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ newItemText: event.target.value });\r\n  };\r\n\r\n  private handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      this.handleSubmit();\r\n    }\r\n  };\r\n\r\n  private toggleDate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ hasDueDate: event.target.checked });\r\n  };\r\n\r\n  private handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ dueDate: new Date(event.target.value) });\r\n  };\r\n\r\n  public render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid item={true} xs={12} className={classes.root}>\r\n        <Grid container={true} alignItems=\"center\" spacing={6}>\r\n          <Grid item={true} md={true} xs={12}>\r\n            <TextField\r\n              label=\"Enter New Item\"\r\n              className={\"add-task-input\"}\r\n              onChange={this.handleTextUpdate}\r\n              onKeyPress={this.handleKeyPress}\r\n              value={this.state.newItemText}\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.centerItem} item={true} md={2} xs={4}>\r\n            <FormControlLabel\r\n              value=\"top\"\r\n              control={\r\n                <Checkbox\r\n                  onChange={this.toggleDate}\r\n                  checked={this.state.hasDueDate}\r\n                />\r\n              }\r\n              label=\"Due Date?\"\r\n              labelPlacement=\"top\"\r\n            />\r\n          </Grid>\r\n          <Grid item={true} md={2} xs={6}>\r\n            <TextField\r\n              label=\"Due Date\"\r\n              type=\"date\"\r\n              disabled={!this.state.hasDueDate}\r\n              onChange={this.handleDateChange}\r\n              defaultValue={formatDate(this.state.dueDate)}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n          <Grid item={true} md={1} xs={1} className=\"center-horizontal\">\r\n            <Button\r\n              aria-label=\"Add\"\r\n              variant=\"contained\"\r\n              onClick={this.handleSubmit}\r\n              endIcon={<SaveIcon />}\r\n            >\r\n              Add\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(AddItemForm);\r\n","import AddItemForm from \"./AddItemForm\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { addTaskItem } from \"../../actions\";\r\n\r\nexport interface IAddItemContainerProps {\r\n  addTaskItem: (taskName: string, hasDueDate: boolean, dueDate: Date) => void;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IAddItemContainerProps => ({\r\n  addTaskItem: (taskName: string, hasDueDate: boolean, dueDate: Date) =>\r\n    dispatch(addTaskItem(taskName, hasDueDate, dueDate))\r\n});\r\n\r\nconst AddItemContainer = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AddItemForm);\r\n\r\nexport default AddItemContainer;\r\n","import React from \"react\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\ninterface IProps {\r\n  value: string;\r\n  label: string;\r\n  handleClick: (value: string) => void;\r\n}\r\n\r\nconst FilterMenuItem: React.FC<IProps> = ({ value, label, handleClick }) => {\r\n  const onItemClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    handleClick(value);\r\n  };\r\n\r\n  return (\r\n    <MenuItem value={value} onClick={onItemClick}>\r\n      {label}\r\n    </MenuItem>\r\n  );\r\n};\r\n\r\nexport default FilterMenuItem;\r\n","import React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\n\r\nimport { IFilterContainerProps } from \".\";\r\nimport { FILTER_MENU } from \"../../constants/menu\";\r\nimport FilterMenuItem from \"./FilterMenuItem\";\r\n\r\ninterface IState {\r\n  showFilterMenu: boolean;\r\n  anchorEl: null | HTMLElement;\r\n}\r\n\r\nclass FilterMenu extends React.Component<IFilterContainerProps, IState> {\r\n  constructor(props: IFilterContainerProps) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null,\r\n      showFilterMenu: false\r\n    };\r\n  }\r\n\r\n  private handleItemClick = (value: string) => {\r\n    this.handleMenuClose();\r\n    this.props.applyFilter(value);\r\n  };\r\n\r\n  private handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.persist();\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      showFilterMenu: true\r\n    });\r\n  };\r\n\r\n  private handleMenuClose = () => {\r\n    this.setState({ anchorEl: null, showFilterMenu: false });\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <IconButton\r\n          onClick={this.handleOpenMenu}\r\n          className=\"filter-button\"\r\n          aria-label=\"Filter\"\r\n          aria-owns={this.state.anchorEl ? \"filter-menu\" : undefined}\r\n          aria-haspopup=\"true\"\r\n        >\r\n          <FilterList />\r\n        </IconButton>\r\n        <Menu\r\n          open={this.state.showFilterMenu}\r\n          onClose={this.handleMenuClose}\r\n          anchorEl={this.state.anchorEl}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n        >\r\n          {FILTER_MENU.map(item => {\r\n            return (\r\n              <FilterMenuItem\r\n                key={item.value}\r\n                value={item.value}\r\n                label={item.label}\r\n                handleClick={this.handleItemClick}\r\n              />\r\n            );\r\n          })}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterMenu;\r\n","import { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { applyFilter } from \"../../actions\";\r\n\r\nimport { IReduxStore } from \"../../model/store\";\r\nimport FilterMenu from \"./FilterMenu\";\r\n\r\ninterface IDispatchProps {\r\n  applyFilter: (value: string) => void;\r\n}\r\n\r\ninterface IStoreProps {\r\n  filterType: string;\r\n}\r\n\r\nexport interface IFilterContainerProps extends IStoreProps, IDispatchProps {}\r\n\r\nconst mapStateToProps = (store: IReduxStore): IStoreProps => {\r\n  return {\r\n    filterType: store.options.filterType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps => ({\r\n  applyFilter: (value: string) => dispatch(applyFilter(value))\r\n});\r\n\r\nconst FilterControlContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FilterMenu);\r\n\r\nexport default FilterControlContainer;\r\n","import React from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nimport { ITaskProps } from \".\";\r\n\r\ninterface IProps {\r\n  id: string;\r\n  isCompleted: boolean;\r\n  value: string;\r\n  hasDueDate: boolean;\r\n  dueDate?: Date;\r\n}\r\n\r\ninterface IStates {\r\n  isEditing: boolean;\r\n  newItem: string;\r\n  newDate?: Date;\r\n  hasDueDate: boolean;\r\n}\r\n\r\nclass TaskItem extends React.Component<IProps & ITaskProps, IStates> {\r\n  constructor(props: IProps & ITaskProps) {\r\n    super(props);\r\n\r\n    if (this.props.hasDueDate && this.props.dueDate !== undefined) {\r\n      this.state = {\r\n        isEditing: false,\r\n        newItem: this.props.value,\r\n        hasDueDate: this.props.hasDueDate,\r\n        newDate: moment(this.props.dueDate).toDate()\r\n      };\r\n    } else {\r\n      this.state = {\r\n        isEditing: false,\r\n        newItem: this.props.value,\r\n        hasDueDate: this.props.hasDueDate\r\n      };\r\n    }\r\n  }\r\n\r\n  private onTextUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ newItem: event.target.value });\r\n  };\r\n\r\n  private toggleStatus = () => {\r\n    this.props.toggleTask(this.props.id);\r\n  };\r\n\r\n  private updateTask = () => {\r\n    this.setState({ isEditing: false }, () => {\r\n      this.props.updateTask(\r\n        this.props.id,\r\n        this.state.newItem,\r\n        this.state.hasDueDate,\r\n        this.state.newDate\r\n      );\r\n    });\r\n  };\r\n\r\n  private toggleDate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ hasDueDate: event.target.checked });\r\n  };\r\n\r\n  private handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ newDate: new Date(event.target.value) });\r\n  };\r\n\r\n  private handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      this.updateTask();\r\n    }\r\n  };\r\n\r\n  private removeTask = () => {\r\n    this.props.removeTask(this.props.id);\r\n  };\r\n\r\n  private toggleEdit = () => {\r\n    this.setState({ isEditing: true });\r\n  };\r\n\r\n  private renderForm = () => {\r\n    return (\r\n      <TableRow>\r\n        <TableCell colSpan={5}>\r\n          <Grid\r\n            container={true}\r\n            spacing={6}\r\n            alignItems=\"center\"\r\n            className=\"edit-row\"\r\n          >\r\n            <Grid item={true} md={7} xs={12}>\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                label=\"Task Name\"\r\n                onChange={this.onTextUpdate}\r\n                value={this.state.newItem}\r\n                onKeyDown={this.handleKeyPress}\r\n              />\r\n            </Grid>\r\n            <Grid item={true} md={2} xs={4} className=\"flex-center\">\r\n              <FormControlLabel\r\n                value=\"top\"\r\n                control={\r\n                  <Checkbox\r\n                    onChange={this.toggleDate}\r\n                    checked={this.state.hasDueDate}\r\n                  />\r\n                }\r\n                label=\"Due Date?\"\r\n                labelPlacement=\"top\"\r\n              />\r\n            </Grid>\r\n            <Grid item={true} md={2} xs={4} className=\"flex-center\">\r\n              <TextField\r\n                label=\"Due Date\"\r\n                type=\"date\"\r\n                defaultValue={moment(this.state.newDate).format(\"YYYY-MM-DD\")}\r\n                InputLabelProps={{ shrink: true }}\r\n                onChange={this.handleDateChange}\r\n              />\r\n            </Grid>\r\n            <Grid item={true} sm={1} xs={4} className=\"flex-center\">\r\n              <IconButton aria-label=\"Save\" onClick={this.updateTask}>\r\n                <SaveIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  private renderItem = () => {\r\n    const itemClass = this.props.isCompleted ? \"completed\" : \"active\";\r\n    return (\r\n      <TableRow className={itemClass}>\r\n        <TableCell className=\"icon\">\r\n          <Checkbox\r\n            onClick={this.toggleStatus}\r\n            checked={this.props.isCompleted}\r\n          />\r\n        </TableCell>\r\n        <TableCell>{this.props.value}</TableCell>\r\n        <TableCell>\r\n          {this.props.hasDueDate && this.props.dueDate\r\n            ? moment(this.props.dueDate).format(\"DD-MMM-YYYY\")\r\n            : \"-\"}\r\n        </TableCell>\r\n        <TableCell className=\"icon\">\r\n          <IconButton aria-label=\"Edit\" onClick={this.toggleEdit}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell className=\"icon\">\r\n          <IconButton aria-label=\"Delete\" onClick={this.removeTask}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  public render() {\r\n    return this.state.isEditing ? this.renderForm() : this.renderItem();\r\n  }\r\n}\r\n\r\nexport default TaskItem;\r\n","import Task from \"./Task\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { removeTask, toggleTask, updateTask } from \"../../actions\";\r\n\r\nexport interface ITaskProps {\r\n  toggleTask: (id: string) => void;\r\n  removeTask: (id: string) => void;\r\n  updateTask: (\r\n    id: string,\r\n    newValue: string,\r\n    hasDueDate: boolean,\r\n    newDate?: Date\r\n  ) => void;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ITaskProps => {\r\n  return {\r\n    toggleTask: (id: string) => dispatch(toggleTask(id)),\r\n    removeTask: (id: string) => dispatch(removeTask(id)),\r\n    updateTask: (\r\n      id: string,\r\n      newValue: string,\r\n      hasDueDate: boolean,\r\n      newDate?: Date\r\n    ) => dispatch(updateTask(id, newValue, hasDueDate, newDate))\r\n  };\r\n};\r\n\r\nconst TaskContainer = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Task);\r\n\r\nexport default TaskContainer;\r\n","import React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport { IToDoListProps } from \".\";\r\nimport TaskItem from \"../Task\";\r\n\r\nconst ToDoList: React.FC<IToDoListProps> = ({ toDoList }) => {\r\n  return (\r\n    <Table className=\"task-list\">\r\n      <TableHead>\r\n        <TableRow className=\"task-list-header\">\r\n          <TableCell align=\"center\">Status</TableCell>\r\n          <TableCell>Task Name</TableCell>\r\n          <TableCell>Due Date</TableCell>\r\n          <TableCell colSpan={2} />\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {toDoList.map((item, index) => {\r\n          return (\r\n            <TaskItem\r\n              key={index}\r\n              id={item.id}\r\n              isCompleted={item.isCompleted}\r\n              hasDueDate={item.hasDueDate}\r\n              dueDate={item.dueDate}\r\n              value={item.value}\r\n            />\r\n          );\r\n        })}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { initTaskList } from \"../../actions\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nimport { IReduxStore, IToDoItem } from \"../../model/store\";\r\n\r\nexport interface IToDoListProps {\r\n  toDoList: IToDoItem[];\r\n  filterType: string;\r\n}\r\n\r\nconst mapStateToProps = (store: IReduxStore): IToDoListProps => {\r\n  const list = Object.keys(store.toDoList)\r\n    .map(key => store.toDoList[key])\r\n    .filter(item => {\r\n      if (store.options.filterType === \"all\") {\r\n        return true;\r\n      } else if (store.options.filterType === \"active\") {\r\n        return !item.isCompleted;\r\n      } else if (store.options.filterType === \"completed\") {\r\n        return item.isCompleted;\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n  return {\r\n    toDoList: list,\r\n    filterType: store.options.filterType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  initTaskList: () => dispatch(initTaskList())\r\n});\r\n\r\nconst TaskListContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskList);\r\n\r\nexport default TaskListContainer;\r\n","import React from \"react\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nimport AddItemFormContainer from \"../components/AddItemForm\";\r\nimport FilterControlContainer from \"../components/FilterMenu\";\r\nimport TaskListContainer from \"../components/TaskList\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AddCircle from \"@material-ui/icons/AddCircle\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flex: 1\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      width: 200\r\n    },\r\n    rightIcon: {\r\n      transition: \"transform 0.5s\",\r\n      marginLeft: theme.spacing(1)\r\n    },\r\n    filler: {\r\n      flex: 1\r\n    },\r\n    formVisible: {\r\n      transform: \"rotate(45deg)\"\r\n    },\r\n    collapse: {\r\n      width: \"100%\"\r\n    }\r\n  });\r\n\r\ninterface IProps extends WithStyles<typeof styles> {}\r\n\r\ninterface IState {\r\n  showAddNewItem: boolean;\r\n}\r\n\r\nclass HomeView extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      showAddNewItem: false\r\n    };\r\n  }\r\n\r\n  private handelAddButton = () => {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        showAddNewItem: !prevState.showAddNewItem\r\n      };\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    const { classes } = this.props;\r\n    const isFormVisible = this.state.showAddNewItem;\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Grid container={true} alignItems=\"stretch\">\r\n          <Grid item={true} xs={12}>\r\n            <Toolbar className={classes.filler}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={this.handelAddButton}\r\n                color={\"primary\"}\r\n                className={classes.button}\r\n                endIcon={\r\n                  <AddCircle\r\n                    className={classNames(classes.rightIcon, {\r\n                      [classes.formVisible]: isFormVisible\r\n                    })}\r\n                  />\r\n                }\r\n              >\r\n                {isFormVisible ? \"Close\" : \"Add New Item\"}\r\n              </Button>\r\n              <div className={classes.filler} />\r\n              <FilterControlContainer />\r\n            </Toolbar>\r\n          </Grid>\r\n          <Divider style={{ width: \"100%\" }} />\r\n          <Collapse in={isFormVisible} className={classes.collapse}>\r\n            <AddItemFormContainer />\r\n            <Divider />\r\n          </Collapse>\r\n          <Grid item={true} xs={12} className={`list-container`}>\r\n            <TaskListContainer />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(HomeView);\r\n","import React, { useEffect } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { Theme, withStyles } from \"@material-ui/core/\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport createStyles from \"@material-ui/core/styles/createStyles\";\r\n\r\nimport Footer from \"./components/Footer\";\r\nimport HeaderContainer from \"./components/Header\";\r\nimport SideDrawerContainer from \"./components/SideDrawer\";\r\nimport CalendarView from \"./views/CalendarView\";\r\nimport HomeView from \"./views/HomeView\";\r\n\r\nimport { loadStore } from \"./actions\";\r\nimport { IStyles } from \"./model\";\r\nimport { IReduxStore } from \"./model/store\";\r\n\r\ninterface IAppDispatch {\r\n  loadReduxStore: (store: IReduxStore) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    content: {\r\n      flexGrow: 1,\r\n      paddingBottom: theme.spacing(1) * 6,\r\n      display: \"flex\",\r\n      flexFlow: \"column\"\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar\r\n    },\r\n    container: {\r\n      display: \"flex\",\r\n      height: \"100%\",\r\n      padding: theme.spacing(1) * 2,\r\n      paddingBottom: 0\r\n    }\r\n  });\r\n\r\nexport interface IProps extends IStyles, IAppDispatch {}\r\n\r\nexport const App: React.FC<IProps> = ({ classes, loadReduxStore }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = (event: any, reason: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const persistedState = localStorage.getItem(\"reduxState\")\r\n      ? JSON.parse(localStorage.getItem(\"reduxState\") || \"\")\r\n      : {};\r\n    if (persistedState != null) {\r\n      loadReduxStore(persistedState);\r\n    }\r\n  });\r\n\r\n  const message =\r\n    \"This site uses local storage to store tasks, by continuing to use this site you are consenting to store data on your browser. (To clear data, right click > Inspect > Application > Clear Storage)\";\r\n\r\n  return (\r\n    <div className=\"app-root\">\r\n      <CssBaseline />\r\n      <HeaderContainer />\r\n      <SideDrawerContainer />\r\n      <div className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <div className={classes.container}>\r\n          <Switch>\r\n            <Route exact={true} path=\"/\" component={HomeView} />\r\n            <Route path={`/calendar/:date?`} component={CalendarView} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        open={open}\r\n        onClose={handleClose}\r\n        autoHideDuration={6000}\r\n        message={message}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IAppDispatch => ({\r\n  loadReduxStore: (store: IReduxStore) => dispatch(loadStore(store))\r\n});\r\n\r\nexport default withStyles(styles)(connect(null, mapDispatchToProps)(App));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { store } from \"./reducers\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport \"typeface-roboto\";\r\nimport \"./styles/index.scss\";\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\n"],"sourceRoot":""}