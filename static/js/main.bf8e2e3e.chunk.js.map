{"version":3,"sources":["constants/index.ts","reducers/optionsReducer.ts","reducers/toDoListReducer.ts","reducers/index.ts","components/Footer.tsx","components/Header/Header.tsx","actions/index.ts","components/Header/index.ts","constants/menu.ts","components/SideDrawer/ListItemLink.tsx","components/SideDrawer/SideDrawer.tsx","components/SideDrawer/index.ts","components/Calendar/Calendar.tsx","components/Calendar/index.ts","components/CalendarList/CalendarListItem.tsx","components/CalendarList/CalendarList.tsx","components/CalendarList/index.ts","views/CalendarView.tsx","utils/index.ts","components/AddItemForm/AddItemForm.tsx","components/AddItemForm/index.ts","components/FilterMenu/FilterMenuItem.tsx","components/FilterMenu/FilterMenu.tsx","components/FilterMenu/index.ts","components/Task/Task.tsx","components/Task/index.ts","components/TaskList/TaskList.tsx","components/TaskList/index.ts","views/HomeView.tsx","App.tsx","index.tsx"],"names":["ACTION_CONSTANTS","INIT_TASK_LIST","ADD_NEW_TASK","UPDATE_TASK_TEXT","TOGGLE_TASK_STATUS","REMOVE_TASK","LOAD_STORE","APPLY_FILTER","TOGGLE_DRAWER","UPDATE_TASK_DATE","defaultStore","filterType","isDrawerOpen","defaultToDo","reducers","combineReducers","toDoList","state","arguments","length","undefined","action","type","C","newId","uuid","Object","objectSpread","defineProperty","id","value","payload","taskName","isCompleted","hasDueDate","dueDate","toISOString","dateAdded","Date","newValue","options","store","createStore","Footer","react","className","this","props","classes","footer","Typography_default","a","variant","href","React","withStyles","theme","createStyles","position","background","bottom","textAlign","width","paddingBottom","spacing","unit","Header","handleDrawerToggle","_this","toggleDrawer","AppBar_default","appBar","Toolbar_default","IconButton_default","color","aria-label","onClick","menuButton","Menu_default","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","marginRight","withTheme","HeaderContainer","connect","dispatch","MAIN_MENU","name","icon","Home","link","CalendarToday","FILTER_MENU","label","ListItemLink","renderLink","itemProps","react_router_dom","assign","to","ListItem_default","button","component","ListItemIcon_default","ListItemText_default","primary","SideDrawer","_classNames","_classNames2","_this$props","Drawer_default","classNames","drawerOpen","drawerClose","paper","open","toolbar","Divider_default","List_default","map","menuItem","SideDrawer_ListItemLink","key","flexShrink","whiteSpace","enteringScreen","overflowX","breakpoints","up","display","alignItems","justifyContent","padding","mixins","SideDrawerContainer","localizer","BigCalendar","momentLocalizer","moment","ToDoCalendar","onNavigate","react_big_calendar_esm","events","eventsList","defaultDate","date","selectedDate","list","keys","forEach","push","title","start","end","allDay","resource","Calendar","CalendarListItem","secondary","CalendarList","tasksList","task","CalendarList_CalendarListItem","format","CalendarView","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","match","params","Paper_default","style","flex","Grid_default","container","height","item","md","components_Calendar","components_CalendarList","toDate","formatDate","concat","getFullYear","getMonth","toString","padStart","getDate","defualtState","newItemText","AddItemForm","checkForm","handleSubmit","addTaskItem","setState","handleTextUpdate","event","target","handleKeyPress","toggleDate","checked","handleDateChange","xs","root","TextField_default","onChange","onKeyPress","centerItem","FormControlLabel_default","control","Checkbox_default","labelPlacement","disabled","defaultValue","InputLabelProps","shrink","AddCircle_default","AddItemContainer","hasTaskDate","taskDate","FilterMenuItem","handleClick","MenuItem_default","FilterMenu","handleItemClick","handleMenuClose","applyFilter","handleOpenMenu","persist","anchorEl","currentTarget","showFilterMenu","_this2","aria-owns","aria-haspopup","index_es","core_Menu_default","onClose","transformOrigin","vertical","horizontal","FilterMenu_FilterMenuItem","FilterControlContainer","filterName","ToDoItem","onTextUpdate","newItem","toggleStatus","toggleTask","updateTask","isEditing","newDate","removeTask","toggleEdit","renderForm","TableRow_default","TableCell_default","colSpan","onKeyDown","sm","Save_default","renderItem","itemClass","Edit_default","Delete_default","TaskContainer","itemId","newText","Task","ToDoList","Table_default","TableHead_default","align","TableBody_default","index","components_Task","TaskListContainer","filter","initTaskList","TaskList","HomeView","handelAddButton","prevState","showAddNewItem","isFormVisible","filler","Button_default","rightIcon","formVisible","components_FilterMenu","Collapse_default","in","collapse","components_AddItemForm","components_TaskList","margin","transform","App","persistedState","localStorage","getItem","JSON","parse","loadStore","CssBaseline_default","components_Header","components_SideDrawer","content","react_router","exact","path","components_Footer","flexGrow","flexFlow","subscribe","setItem","stringify","getState","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bf8e2e3e.chunk.js","sourcesContent":["const ACTION_CONSTANTS = {\r\n  INIT_TASK_LIST: \"INIT_TASK_LIST\",\r\n  ADD_NEW_TASK: \"ADD_NEW_ITEM\",\r\n  UPDATE_TASK_TEXT: \"UPDATE_ADD_ITEM_TEXT\",\r\n  TOGGLE_TASK_STATUS: \"TOGGLE_ITEM\",\r\n  REMOVE_TASK: \"REMOVE_ITEM\",\r\n  LOAD_STORE: \"LOAD_STORE\",\r\n  APPLY_FILTER: \"APPLY_FILTER\",\r\n  TOGGLE_DRAWER: \"TOGGLE_DRAWER\",\r\n  UPDATE_TASK_DATE: \"UPDATE_TASK_DATE\"\r\n};\r\n\r\nexport default ACTION_CONSTANTS;\r\n\r\nexport const STYLE_CONSTANTS = {\r\n  drawerWidth: 240\r\n};\r\n","import C from \"../constants\";\r\nimport { IAction, IOptions } from \"../model/store\";\r\n\r\nexport const defaultStore: IOptions = {\r\n  filterType: \"all\",\r\n  isDrawerOpen: false\r\n};\r\n\r\nexport default function options(\r\n  state: IOptions = defaultStore,\r\n  action: IAction\r\n): IOptions {\r\n  switch (action.type) {\r\n    case C.APPLY_FILTER: {\r\n      return {\r\n        ...state,\r\n        filterType: action.payload\r\n      };\r\n    }\r\n    case C.TOGGLE_DRAWER: {\r\n      return {\r\n        ...state,\r\n        isDrawerOpen: !state.isDrawerOpen\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n}\r\n","import uuid from \"uuid\";\r\nimport C from \"../constants\";\r\nimport { IAction, ITodoList } from \"../model/store\";\r\n\r\nexport const defaultToDo: ITodoList = {};\r\n\r\nexport default function toDoList(\r\n  state: ITodoList = defaultToDo,\r\n  action: IAction\r\n): ITodoList {\r\n  switch (action.type) {\r\n    case C.ADD_NEW_TASK: {\r\n      const newId = uuid();\r\n      return {\r\n        ...state,\r\n        [newId]: {\r\n          id: newId,\r\n          value: action.payload.taskName,\r\n          isCompleted: false,\r\n          hasDueDate: action.payload.hasDueDate,\r\n          dueDate: action.payload.dueDate.toISOString(),\r\n          dateAdded: new Date().toISOString()\r\n        }\r\n      };\r\n    }\r\n    case C.REMOVE_TASK: {\r\n      if (state[action.payload]) {\r\n        delete state[action.payload];\r\n      }\r\n\r\n      return { ...state };\r\n    }\r\n    case C.TOGGLE_TASK_STATUS: {\r\n      state[action.payload].isCompleted = !state[action.payload].isCompleted;\r\n\r\n      return { ...state };\r\n    }\r\n    case C.UPDATE_TASK_TEXT: {\r\n      state[action.payload.id].value = action.payload.newValue;\r\n\r\n      return { ...state };\r\n    }\r\n    case C.LOAD_STORE: {\r\n      if (action.payload.toDoList) {\r\n        return { ...action.payload.toDoList };\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n    case C.INIT_TASK_LIST: {\r\n      return { ...state };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n}\r\n","import logger from \"redux-logger\";\r\n\r\nimport options from \"./optionsReducer\";\r\nimport toDoList from \"./toDoListReducer\";\r\n\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\n\r\nlet middleware = {};\r\n\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  middleware = applyMiddleware(logger);\r\n}\r\n\r\nconst reducers = combineReducers({ toDoList, options });\r\n\r\nexport const store = createStore(reducers, middleware);\r\n","import * as React from \"react\";\r\n\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { IStyles } from \"../model\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    footer: {\r\n      position: \"fixed\",\r\n      background: \"white\",\r\n      bottom: 0,\r\n      textAlign: \"center\",\r\n      width: \"100%\",\r\n      paddingBottom: theme.spacing.unit * 2\r\n    }\r\n  });\r\n\r\nclass Footer extends React.Component<IStyles, {}> {\r\n  public render() {\r\n    return (\r\n      <div className={this.props.classes.footer}>\r\n        <Typography variant=\"body1\">\r\n          Built with <a href=\"https://reactjs.org/\">React</a> by{\" \"}\r\n          <a href=\"https://www.kazyamada.com\">Kazuki Yamada</a>.{\" \"}\r\n          <a href=\"https://github.com/kaz-yamada/React-Redux-Todo-List\">\r\n            Source\r\n          </a>\r\n        </Typography>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import * as React from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { IHeaderContainerProps } from \".\";\r\nimport { IStyles } from \"../../model\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      })\r\n    },\r\n    menuButton: {\r\n      marginLeft: 12,\r\n      marginRight: 36\r\n    }\r\n  });\r\n\r\ninterface IProps extends IHeaderContainerProps, IStyles {}\r\nclass Header extends React.Component<IProps, {}> {\r\n  private handleDrawerToggle = () => {\r\n    this.props.toggleDrawer();\r\n  };\r\n\r\n  public render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"Open drawer\"\r\n            onClick={this.handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            To Do List\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Header);\r\n","import { IAction, IReduxStore } from \"../model/store\";\r\n\r\nimport C from \"../constants\";\r\n\r\nexport const initTaskList = () => {\r\n  return {\r\n    type: C.INIT_TASK_LIST,\r\n    payload: \"\"\r\n  };\r\n};\r\n\r\nexport const addTaskItem = (\r\n  task: string,\r\n  hasTaskDate: boolean,\r\n  taskDate: Date\r\n): IAction => {\r\n  return {\r\n    type: C.ADD_NEW_TASK,\r\n    payload: {\r\n      taskName: task,\r\n      hasDueDate: hasTaskDate,\r\n      dueDate: taskDate\r\n    }\r\n  };\r\n};\r\n\r\nexport const toggleTask = (id: string): IAction => {\r\n  return {\r\n    type: C.TOGGLE_TASK_STATUS,\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const removeTask = (id: string): IAction => {\r\n  return {\r\n    type: C.REMOVE_TASK,\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const updateDueDate = (itemId: string, newDate: Date): IAction => {\r\n  return {\r\n    type: C.UPDATE_TASK_DATE,\r\n    payload: { id: itemId, newValue: newDate }\r\n  };\r\n};\r\n\r\nexport const updateTask = (itemId: string, newText: string): IAction => {\r\n  return {\r\n    type: C.UPDATE_TASK_TEXT,\r\n    payload: { id: itemId, newValue: newText }\r\n  };\r\n};\r\n\r\nexport const loadStore = (list: IReduxStore) => {\r\n  return {\r\n    type: C.LOAD_STORE,\r\n    payload: list\r\n  };\r\n};\r\n\r\nexport const applyFilter = (filterName: string): IAction => {\r\n  return {\r\n    type: C.APPLY_FILTER,\r\n    payload: filterName\r\n  };\r\n};\r\n\r\nexport const toggleDrawer = (): IAction => {\r\n  return {\r\n    type: C.TOGGLE_DRAWER,\r\n    payload: null\r\n  };\r\n};\r\n","import Header from \"./Header\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { toggleDrawer } from \"../../actions\";\r\nimport { IReduxStore } from \"../../model/store\";\r\n\r\ninterface IStoreProps {\r\n  isDrawerOpen: boolean;\r\n}\r\n\r\ninterface IHeaderDispatch {\r\n  toggleDrawer: () => void;\r\n}\r\n\r\nexport interface IHeaderContainerProps extends IStoreProps, IHeaderDispatch {}\r\n\r\nconst mapStoreToProps = (store: IReduxStore): IStoreProps => {\r\n  return {\r\n    isDrawerOpen: store.options.isDrawerOpen\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IHeaderDispatch => ({\r\n  toggleDrawer: () => dispatch(toggleDrawer())\r\n});\r\n\r\nconst HeaderContainer = connect(\r\n  mapStoreToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n\r\nexport default HeaderContainer;\r\n","import { CalendarToday, Home } from \"@material-ui/icons\";\r\n\r\nimport { IMainMenuItem, IMenuItem } from \"../model\";\r\n\r\nconst MAIN_MENU: IMainMenuItem[] = [\r\n  { name: \"Home\", icon: Home, link: \"/\" },\r\n  { name: \"Calendar\", icon: CalendarToday, link: \"/calendar\" }\r\n];\r\nexport default MAIN_MENU;\r\n\r\nexport const FILTER_MENU: IMenuItem[] = [\r\n  {\r\n    label: \"All\",\r\n    value: \"all\"\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    value: \"active\"\r\n  },\r\n  {\r\n    label: \"Completed\",\r\n    value: \"completed\"\r\n  }\r\n];\r\n","import * as React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\ninterface IProps {\r\n  name: string;\r\n  icon: React.ReactElement;\r\n  to: string;\r\n  replace?: boolean;\r\n}\r\n\r\nclass ListItemLink extends React.Component<IProps, {}> {\r\n  private renderLink = (itemProps: any) => (\r\n    <Link to={this.props.to} {...itemProps} />\r\n  );\r\n\r\n  public render() {\r\n    return (\r\n      <li>\r\n        <ListItem button={true} component={this.renderLink as any}>\r\n          <ListItemIcon>{this.props.icon}</ListItemIcon>\r\n          <ListItemText primary={this.props.name} />\r\n        </ListItem>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListItemLink;\r\n","import * as React from \"react\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { ISideDrawerContainerProps } from \".\";\r\nimport { STYLE_CONSTANTS } from \"../../constants\";\r\n\r\nimport MAIN_MENU from \"../../constants/menu\";\r\nimport ListItemLink from \"./ListItemLink\";\r\n\r\nconst drawerWidth = STYLE_CONSTANTS.drawerWidth;\r\n\r\ninterface IProps {\r\n  classes: any;\r\n  theme: Theme;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: \"nowrap\"\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen\r\n      })\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen\r\n      }),\r\n      overflowX: \"hidden\",\r\n      width: 0,\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing.unit * 7 + 1\r\n      }\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar\r\n    }\r\n  });\r\n\r\nclass SideDrawer extends React.Component<\r\n  ISideDrawerContainerProps & IProps,\r\n  {}\r\n> {\r\n  public render() {\r\n    const { classes, isDrawerOpen } = this.props;\r\n    return (\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={classNames(classes.drawer, {\r\n          [classes.drawerOpen]: isDrawerOpen,\r\n          [classes.drawerClose]: !isDrawerOpen\r\n        })}\r\n        classes={{\r\n          paper: classNames({\r\n            [classes.drawerOpen]: isDrawerOpen,\r\n            [classes.drawerClose]: !isDrawerOpen\r\n          })\r\n        }}\r\n        open={isDrawerOpen}\r\n      >\r\n        <div className={classes.toolbar} />\r\n        <Divider />\r\n        <List>\r\n          {MAIN_MENU.map(menuItem => {\r\n            return (\r\n              <ListItemLink\r\n                key={menuItem.name}\r\n                name={menuItem.name}\r\n                icon={<menuItem.icon />}\r\n                to={menuItem.link}\r\n              />\r\n            );\r\n          })}\r\n        </List>\r\n        <Divider />\r\n      </Drawer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(SideDrawer);\r\n","import SideDrawer from \"./SideDrawer\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { toggleDrawer } from \"../../actions\";\r\nimport { IReduxStore } from \"../../model/store\";\r\n\r\ninterface IDispatchProps {\r\n  toggleDrawer: () => void;\r\n}\r\n\r\ninterface IStoreProps {\r\n  isDrawerOpen: boolean;\r\n}\r\n\r\nexport interface ISideDrawerContainerProps\r\n  extends IStoreProps,\r\n    IDispatchProps {}\r\n\r\nconst mapStoreToProps = (store: IReduxStore) => {\r\n  return {\r\n    isDrawerOpen: store.options.isDrawerOpen\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps => ({\r\n  toggleDrawer: () => dispatch(toggleDrawer())\r\n});\r\n\r\nconst SideDrawerContainer = connect(\r\n  mapStoreToProps,\r\n  mapDispatchToProps\r\n)(SideDrawer);\r\n\r\nexport default SideDrawerContainer;\r\n","import * as React from \"react\";\r\n\r\nimport * as moment from \"moment\";\r\nimport BigCalendar from \"react-big-calendar\";\r\n\r\nimport { ICalendarProps } from \".\";\r\n\r\nconst localizer = BigCalendar.momentLocalizer(moment);\r\n\r\ninterface IProps {\r\n  selectedDate?: Date;\r\n}\r\n\r\nclass ToDoCalendar extends React.Component<ICalendarProps & IProps, {}> {\r\n  private onNavigate = () => {};\r\n\r\n  public render() {\r\n    return (\r\n      <BigCalendar\r\n        localizer={localizer}\r\n        events={this.props.eventsList}\r\n        defaultDate={new Date()}\r\n        onNavigate={this.onNavigate}\r\n        date={this.props.selectedDate}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoCalendar;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport Calendar from \"./Calendar\";\r\n\r\nimport { Event } from \"react-big-calendar\";\r\nimport { IReduxStore } from \"../../model/store\";\r\n\r\nexport interface ICalendarProps {\r\n  eventsList: Event[];\r\n}\r\n\r\nconst mapStateToProps = (store: IReduxStore): ICalendarProps => {\r\n  const list: Event[] = [];\r\n  Object.keys(store.toDoList).forEach(key => {\r\n    if (store.toDoList[key].hasDueDate) {\r\n      list.push({\r\n        title: store.toDoList[key].value,\r\n        start: store.toDoList[key].dueDate,\r\n        end: store.toDoList[key].dueDate,\r\n        allDay: false,\r\n        resource: store.toDoList[key].id\r\n      });\r\n    }\r\n  });\r\n\r\n  return {\r\n    eventsList: list\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Calendar);\r\n","import * as React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\ninterface IProps {\r\n  id: string;\r\n  date: string;\r\n  title: string;\r\n}\r\n\r\nclass CalendarListItem extends React.Component<IProps, {}> {\r\n  private renderLink = (itemProps: any) => (\r\n    <Link to={\"/calendar/\" + this.props.date} {...itemProps} />\r\n  );\r\n\r\n  public render() {\r\n    return (\r\n      <ListItem button={true} component={this.renderLink as any}>\r\n        <ListItemText primary={this.props.title} secondary={this.props.date} />\r\n      </ListItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalendarListItem;\r\n","import * as React from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\n\r\nimport { ICalendarProps } from \".\";\r\nimport CalendarListItem from \"./CalendarListItem\";\r\n\r\nclass CalendarList extends React.Component<ICalendarProps, {}> {\r\n  public render() {\r\n    return (\r\n      <List>\r\n        {this.props.tasksList.map(task => (\r\n          <CalendarListItem\r\n            key={task.id}\r\n            id={task.id}\r\n            title={task.value}\r\n            date={moment(task.dueDate).format(\"DD-MMM-YYYY\")}\r\n          />\r\n        ))}\r\n      </List>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalendarList;\r\n","import { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport CalendarList from \"./CalendarList\";\r\n\r\n// import { Event } from \"react-big-calendar\";\r\nimport { IReduxStore, IToDoItem } from \"../../model/store\";\r\n\r\ninterface IStoreProps {\r\n  tasksList: IToDoItem[];\r\n}\r\n\r\ninterface IDispatchProps {\r\n  //   selectEvent: (date: Date) => void;\r\n}\r\n\r\nexport interface ICalendarProps extends IStoreProps, IDispatchProps {}\r\n\r\nconst mapStateToProps = (store: IReduxStore): IStoreProps => {\r\n  const list: IToDoItem[] = [];\r\n  Object.keys(store.toDoList).forEach(key => {\r\n    if (store.toDoList[key].hasDueDate) {\r\n      list.push(store.toDoList[key]);\r\n    }\r\n  });\r\n\r\n  return {\r\n    tasksList: list\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps => ({\r\n  // selectDate: (value: Date) => dispatch(applyFilter(value))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CalendarList);\r\n","import * as React from \"react\";\r\n\r\nimport moment from \"moment\";\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport CalendarContainer from \"../components/Calendar\";\r\nimport CalenarListContainer from \"../components/CalendarList\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\ninterface IState {\r\n  selectedDate: Date;\r\n}\r\n\r\ninterface IMatchParams {\r\n  date: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<IMatchParams> {}\r\n\r\nclass CalendarView extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedDate: new Date()\r\n    };\r\n  }\r\n\r\n  public static getDerivedStateFromProps(props: IProps, state: IState): IState {\r\n    const date = props.match.params.date\r\n      ? moment(props.match.params.date, \"DD-MMM-YYYY\").toDate()\r\n      : state.selectedDate;\r\n\r\n    return {\r\n      selectedDate: date\r\n    };\r\n  }\r\n\r\n  public shouldComponentUpdate() {\r\n    return (\r\n      this.props.match.params.date !==\r\n      moment(this.state.selectedDate).format(\"DD-MMM-YYYY\")\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <Paper style={{ flex: 1 }}>\r\n        <Grid container={true} style={{ height: \"100%\" }}>\r\n          <Grid item={true} md={true}>\r\n            <CalendarContainer selectedDate={this.state.selectedDate} />\r\n          </Grid>\r\n          <Grid item={true} md={4}>\r\n            <CalenarListContainer />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CalendarView;\r\n","export const formatDate = (date: Date | undefined) => {\r\n  if (date) {\r\n    return `${date.getFullYear()}-${date\r\n      .getMonth()\r\n      .toString()\r\n      .padStart(2, \"0\")}-${date.getDate()}`;\r\n  }\r\n};\r\n","import * as React from \"react\";\r\n\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nimport { IAddItemContainerProps } from \".\";\r\nimport { IStyles } from \"../../model\";\r\nimport { formatDate } from \"../../utils\";\r\n\r\ninterface IState {\r\n  newItemText: string;\r\n  hasDueDate: boolean;\r\n  dueDate: Date;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n      padding: `${theme.spacing.unit}px ${theme.spacing.unit * 3}px`\r\n    }\r\n  });\r\n\r\nconst defualtState: IState = {\r\n  newItemText: \"\",\r\n  hasDueDate: false,\r\n  dueDate: new Date()\r\n};\r\n\r\nclass AddItemForm extends React.Component<\r\n  IAddItemContainerProps & IStyles,\r\n  IState\r\n> {\r\n  constructor(props: IAddItemContainerProps & IStyles) {\r\n    super(props);\r\n\r\n    this.state = { ...defualtState };\r\n  }\r\n\r\n  private checkForm = () => {\r\n    if (!this.state.newItemText) {\r\n      return false;\r\n    }\r\n    if (this.state.hasDueDate && this.state.dueDate === undefined) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  private handleSubmit = () => {\r\n    if (this.checkForm()) {\r\n      this.props.addTaskItem(\r\n        this.state.newItemText,\r\n        this.state.hasDueDate,\r\n        this.state.dueDate\r\n      );\r\n\r\n      this.setState({ ...defualtState });\r\n    }\r\n  };\r\n\r\n  private handleTextUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ newItemText: event.target.value });\r\n  };\r\n\r\n  private handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      this.handleSubmit();\r\n    }\r\n  };\r\n\r\n  private toggleDate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ hasDueDate: event.target.checked });\r\n  };\r\n\r\n  private handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ dueDate: new Date(event.target.value) });\r\n  };\r\n\r\n  public render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid item={true} xs={12} className={classes.root}>\r\n        <Grid container={true} alignItems=\"center\" spacing={16}>\r\n          <Grid item={true} md={true} xs={12}>\r\n            <TextField\r\n              label=\"Enter New Item\"\r\n              className={\"add-task-input\"}\r\n              onChange={this.handleTextUpdate}\r\n              onKeyPress={this.handleKeyPress}\r\n              value={this.state.newItemText}\r\n            />\r\n          </Grid>\r\n          <Grid className={classes.centerItem} item={true} md={2} xs={4}>\r\n            <FormControlLabel\r\n              value=\"top\"\r\n              control={\r\n                <Checkbox\r\n                  onChange={this.toggleDate}\r\n                  checked={this.state.hasDueDate}\r\n                />\r\n              }\r\n              label=\"Due Date?\"\r\n              labelPlacement=\"top\"\r\n            />\r\n          </Grid>\r\n          <Grid item={true} md={2} xs={6}>\r\n            <TextField\r\n              label=\"Due Date\"\r\n              type=\"date\"\r\n              disabled={!this.state.hasDueDate}\r\n              onChange={this.handleDateChange}\r\n              defaultValue={formatDate(this.state.dueDate)}\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Grid>\r\n          <Grid item={true} md={1} xs={1} className=\"center-horizontal\">\r\n            <IconButton aria-label=\"Add\" onClick={this.handleSubmit}>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(AddItemForm);\r\n","import AddItemForm from \"./AddItemForm\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { addTaskItem } from \"../../actions\";\r\n\r\nexport interface IAddItemContainerProps {\r\n  addTaskItem: (taskName: string, hasDueDate: boolean, dueDate: Date) => void;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IAddItemContainerProps => ({\r\n  addTaskItem: (taskName: string, hasDueDate: boolean, dueDate: Date) =>\r\n    dispatch(addTaskItem(taskName, hasDueDate, dueDate))\r\n});\r\n\r\nconst AddItemContainer = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(AddItemForm);\r\n\r\nexport default AddItemContainer;\r\n","import * as React from \"react\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\ninterface IProps {\r\n  value: string;\r\n  label: string;\r\n  handleClick: (value: string) => void;\r\n}\r\n\r\nclass FilterMenuItem extends React.Component<IProps, {}> {\r\n  private handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    this.props.handleClick(this.props.value);\r\n  };\r\n\r\n  public render() {\r\n    const { value, label } = this.props;\r\n\r\n    return (\r\n      <MenuItem value={value} onClick={this.handleClick} >\r\n        {label}\r\n      </MenuItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterMenuItem;\r\n","import * as React from \"react\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { FilterList } from \"@material-ui/icons\";\r\n\r\nimport { IFilterContainerProps } from \".\";\r\nimport { FILTER_MENU } from \"../../constants/menu\";\r\nimport FilterMenuItem from \"./FilterMenuItem\";\r\n\r\ninterface IState {\r\n  showFilterMenu: boolean;\r\n  anchorEl: null | HTMLElement;\r\n}\r\n\r\nclass FilterMenu extends React.Component<IFilterContainerProps, IState> {\r\n  constructor(props: IFilterContainerProps) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null,\r\n      showFilterMenu: false\r\n    };\r\n  }\r\n\r\n  private handleItemClick = (value: string) => {\r\n    this.handleMenuClose();\r\n    this.props.applyFilter(value);\r\n  };\r\n\r\n  private handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.persist();\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      showFilterMenu: true\r\n    });\r\n  };\r\n\r\n  private handleMenuClose = () => {\r\n    this.setState({ anchorEl: null, showFilterMenu: false });\r\n  };\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <IconButton\r\n          onClick={this.handleOpenMenu}\r\n          className=\"filter-button\"\r\n          aria-label=\"Filter\"\r\n          aria-owns={this.state.anchorEl ? \"filter-menu\" : undefined}\r\n          aria-haspopup=\"true\"\r\n        >\r\n          <FilterList />\r\n        </IconButton>\r\n        <Menu\r\n          open={this.state.showFilterMenu}\r\n          onClose={this.handleMenuClose}\r\n          anchorEl={this.state.anchorEl}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\"\r\n          }}\r\n        >\r\n          {FILTER_MENU.map(item => {\r\n            return (\r\n              <FilterMenuItem\r\n                key={item.value}\r\n                value={item.value}\r\n                label={item.label}\r\n                handleClick={this.handleItemClick}\r\n              />\r\n            );\r\n          })}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterMenu;\r\n","import { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { applyFilter } from \"../../actions\";\r\n\r\nimport { IReduxStore } from \"../../model/store\";\r\nimport FilterMenu from \"./FilterMenu\";\r\n\r\ninterface IDispatchProps {\r\n  applyFilter: (value: string) => void;\r\n}\r\n\r\ninterface IStoreProps {\r\n  filterType: string;\r\n}\r\n\r\nexport interface IFilterContainerProps extends IStoreProps, IDispatchProps {}\r\n\r\nconst mapStateToProps = (store: IReduxStore): IStoreProps => {\r\n  return {\r\n    filterType: store.options.filterType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps => ({\r\n  applyFilter: (value: string) => dispatch(applyFilter(value))\r\n});\r\n\r\nconst FilterControlContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FilterMenu);\r\n\r\nexport default FilterControlContainer;\r\n","import * as React from \"react\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nimport { ITaskProps } from \".\";\r\n\r\ninterface IProps {\r\n  id: string;\r\n  isCompleted: boolean;\r\n  value: string;\r\n  hasDueDate: boolean;\r\n  dueDate?: string;\r\n}\r\n\r\ninterface IStates {\r\n  isEditing: boolean;\r\n  newItem: string;\r\n  newDate?: Date;\r\n  hasDueDate: boolean;\r\n}\r\n\r\nclass ToDoItem extends React.Component<IProps & ITaskProps, IStates> {\r\n  constructor(props: IProps & ITaskProps) {\r\n    super(props);\r\n\r\n    if (this.props.hasDueDate && this.props.dueDate !== undefined) {\r\n      this.state = {\r\n        isEditing: false,\r\n        newItem: this.props.value,\r\n        hasDueDate: this.props.hasDueDate,\r\n        newDate: moment(this.props.dueDate).toDate()\r\n      };\r\n    } else {\r\n      this.state = {\r\n        isEditing: false,\r\n        newItem: this.props.value,\r\n        hasDueDate: this.props.hasDueDate\r\n      };\r\n    }\r\n  }\r\n\r\n  private onTextUpdate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ newItem: event.target.value });\r\n  };\r\n\r\n  private toggleStatus = () => {\r\n    this.props.toggleTask(this.props.id);\r\n  };\r\n\r\n  private updateTask = () => {\r\n    this.setState({ isEditing: false }, () => {\r\n      this.props.updateTask(this.props.id, this.state.newItem);\r\n    });\r\n  };\r\n\r\n  private toggleDate = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ hasDueDate: event.target.checked });\r\n  };\r\n\r\n  private handleDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({ newDate: new Date(event.target.value) });\r\n  };\r\n\r\n  private handleKeyPress = (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      this.updateTask();\r\n    }\r\n  };\r\n\r\n  private removeTask = () => {\r\n    this.props.removeTask(this.props.id);\r\n  };\r\n\r\n  private toggleEdit = () => {\r\n    this.setState({ isEditing: true });\r\n  };\r\n\r\n  private renderForm = () => {\r\n    return (\r\n      <TableRow>\r\n        <TableCell colSpan={5}>\r\n          <Grid container={true} spacing={16} alignItems=\"center\" className=\"edit-row\">\r\n            <Grid item={true} md={7} xs={12}>\r\n              <TextField\r\n                style={{ width: \"100%\" }}\r\n                label=\"Task Name\"\r\n                onChange={this.onTextUpdate}\r\n                value={this.state.newItem}\r\n                onKeyDown={this.handleKeyPress}\r\n              />\r\n            </Grid>\r\n            <Grid item={true} md={2} xs={4} className=\"flex-center\">\r\n              <FormControlLabel\r\n                value=\"top\"\r\n                control={\r\n                  <Checkbox\r\n                    onChange={this.toggleDate}\r\n                    checked={this.state.hasDueDate}\r\n                  />\r\n                }\r\n                label=\"Due Date?\"\r\n                labelPlacement=\"top\"\r\n              />\r\n            </Grid>\r\n            <Grid item={true} md={2} xs={4} className=\"flex-center\">\r\n              <TextField\r\n                label=\"Due Date\"\r\n                type=\"date\"\r\n                defaultValue={moment(this.state.newDate).format(\"YYYY-MM-DD\")}\r\n                InputLabelProps={{ shrink: true }}\r\n                onChange={this.handleDateChange}\r\n              />\r\n            </Grid>\r\n            <Grid item={true} sm={1} xs={4} className=\"flex-center\">\r\n              <IconButton aria-label=\"Save\" onClick={this.updateTask}>\r\n                <SaveIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  private renderItem = () => {\r\n    const itemClass = this.props.isCompleted ? \"completed\" : \"active\";\r\n    return (\r\n      <TableRow className={itemClass}>\r\n        <TableCell className=\"icon\">\r\n          <Checkbox\r\n            onClick={this.toggleStatus}\r\n            checked={this.props.isCompleted}\r\n          />\r\n        </TableCell>\r\n        <TableCell>{this.props.value}</TableCell>\r\n        <TableCell>\r\n          {this.props.hasDueDate && this.props.dueDate\r\n            ? moment(this.props.dueDate).format(\"DD-MMM-YYYY\")\r\n            : \"-\"}\r\n        </TableCell>\r\n        <TableCell className=\"icon\">\r\n          <IconButton aria-label=\"Edit\" onClick={this.toggleEdit}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell className=\"icon\">\r\n          <IconButton aria-label=\"Delete\" onClick={this.removeTask}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  public render() {\r\n    return this.state.isEditing ? this.renderForm() : this.renderItem();\r\n  }\r\n}\r\n\r\nexport default ToDoItem;\r\n","import Task from \"./Task\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { removeTask, toggleTask, updateTask } from \"../../actions\";\r\n\r\nexport interface ITaskProps {\r\n  toggleTask: (id: string) => void;\r\n  removeTask: (id: string) => void;\r\n  updateTask: (id: string, newValue: string) => void;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): ITaskProps => {\r\n  return {\r\n    toggleTask: (id: string) => dispatch(toggleTask(id)),\r\n    removeTask: (id: string) => dispatch(removeTask(id)),\r\n    updateTask: (id: string, newValue: string) =>\r\n      dispatch(updateTask(id, newValue))\r\n  };\r\n};\r\n\r\nconst TaskContainer = connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Task);\r\n\r\nexport default TaskContainer;\r\n","import * as React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport { IToDoListProps } from \".\";\r\nimport TaskItem from \"../Task\";\r\n\r\nclass ToDoList extends React.Component<IToDoListProps, {}> {\r\n  public render() {\r\n    return (\r\n      <Table className=\"task-list\">\r\n        <TableHead>\r\n          <TableRow className=\"task-list-header\">\r\n            <TableCell  align=\"center\">Status</TableCell>\r\n            <TableCell>Task Name</TableCell>\r\n            <TableCell>Due Date</TableCell>\r\n            <TableCell colSpan={2} />\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {this.props.toDoList.map((item, index) => {\r\n            return (\r\n              <TaskItem\r\n                key={index}\r\n                id={item.id}\r\n                isCompleted={item.isCompleted}\r\n                hasDueDate={item.hasDueDate}\r\n                dueDate={item.dueDate}\r\n                value={item.value}\r\n              />\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;\r\n","import { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport { initTaskList } from \"../../actions\";\r\nimport TaskList from \"./TaskList\";\r\n\r\nimport { IReduxStore, IToDoItem } from \"../../model/store\";\r\n\r\nexport interface IToDoListProps {\r\n  toDoList: IToDoItem[];\r\n  filterType: string;\r\n}\r\n\r\nconst mapStateToProps = (store: IReduxStore): IToDoListProps => {\r\n  const list = Object.keys(store.toDoList)\r\n    .map(key => store.toDoList[key])\r\n    .filter(item => {\r\n      if (store.options.filterType === \"all\") {\r\n        return true;\r\n      } else if (store.options.filterType === \"active\") {\r\n        return !item.isCompleted;\r\n      } else if (store.options.filterType === \"completed\") {\r\n        return item.isCompleted;\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n  return {\r\n    toDoList: list,\r\n    filterType: store.options.filterType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  initTaskList: () => dispatch(initTaskList())\r\n});\r\n\r\nconst TaskListContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskList);\r\n\r\nexport default TaskListContainer;\r\n","import * as React from \"react\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nimport AddItemFormContainer from \"../components/AddItemForm\";\r\nimport FilterControlContainer from \"../components/FilterMenu\";\r\nimport TaskListContainer from \"../components/TaskList\";\r\n\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { AddCircle } from \"@material-ui/icons\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flex: 1\r\n    },\r\n    button: {\r\n      margin: theme.spacing.unit,\r\n      width: 200\r\n    },\r\n    rightIcon: {\r\n      transition: \"transform 0.5s\",\r\n      marginLeft: theme.spacing.unit\r\n    },\r\n    filler: {\r\n      flex: 1\r\n    },\r\n    formVisible: {\r\n      transform: \"rotate(45deg)\"\r\n    },\r\n    collapse: {\r\n      width: \"100%\"\r\n    }\r\n  });\r\n\r\ninterface IProps extends WithStyles<typeof styles> {}\r\n\r\ninterface IState {\r\n  showAddNewItem: boolean;\r\n}\r\n\r\nclass HomeView extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      showAddNewItem: false\r\n    };\r\n  }\r\n\r\n  private handelAddButton = () => {\r\n    this.setState((prevState: IState) => {\r\n      return {\r\n        showAddNewItem: !prevState.showAddNewItem\r\n      };\r\n    });\r\n  };\r\n\r\n  public render() {\r\n    const { classes } = this.props;\r\n    const isFormVisible = this.state.showAddNewItem;\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <Grid container={true} alignItems=\"stretch\">\r\n          <Grid item={true} xs={12}>\r\n            <Toolbar className={classes.filler}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={this.handelAddButton}\r\n                color={\"primary\"}\r\n                className={classes.button}\r\n              >\r\n                {isFormVisible ? \"Close\" : \"Add New Item\"}\r\n                <AddCircle\r\n                  className={classNames(classes.rightIcon, {\r\n                    [classes.formVisible]: isFormVisible\r\n                  })}\r\n                />\r\n              </Button>\r\n              <div className={classes.filler} />\r\n              <FilterControlContainer />\r\n            </Toolbar>\r\n          </Grid>\r\n          <Divider style={{ width: \"100%\" }} />\r\n          <Collapse in={isFormVisible} className={classes.collapse}>\r\n            <AddItemFormContainer />\r\n            <Divider />\r\n          </Collapse>\r\n          <Grid item={true} xs={12} className={`list-container`}>\r\n            <TaskListContainer />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(HomeView);\r\n","import * as React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Footer from \"./components/Footer\";\r\nimport HeaderContainer from \"./components/Header\";\r\nimport SideDrawerContainer from \"./components/SideDrawer\";\r\nimport CalendarView from \"./views/CalendarView\";\r\nimport HomeView from \"./views/HomeView\";\r\n\r\nimport { loadStore } from \"./actions\";\r\nimport { IStyles } from \"./model\";\r\nimport { IReduxStore } from \"./model/store\";\r\n\r\ninterface IAppDispatch {\r\n  loadStore: (store: IReduxStore) => void;\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing.unit * 3,\r\n      paddingBottom: theme.spacing.unit * 6,\r\n      display: \"flex\",\r\n      flexFlow: \"column\"\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar\r\n    }\r\n  });\r\n\r\nclass App extends React.Component<IStyles & IAppDispatch, {}> {\r\n  /**\r\n   * Get saved user data from cache\r\n   */\r\n  public componentDidMount() {\r\n    const persistedState = localStorage.getItem(\"reduxState\")\r\n      ? JSON.parse(localStorage.getItem(\"reduxState\") || \"\")\r\n      : {};\r\n    if (persistedState != null) {\r\n      this.props.loadStore(persistedState);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"app-root\">\r\n        <CssBaseline />\r\n        <HeaderContainer />\r\n        <SideDrawerContainer />\r\n        <div className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route exact={true} path=\"/\" component={HomeView} />\r\n            <Route path={`/calendar/:date?`} component={CalendarView} />\r\n          </Switch>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): IAppDispatch => ({\r\n  loadStore: (store: IReduxStore) => dispatch(loadStore(store))\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(App)\r\n);\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { store } from \"./reducers\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport \"typeface-roboto\";\r\nimport \"./styles/index.scss\";\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\n"],"sourceRoot":""}